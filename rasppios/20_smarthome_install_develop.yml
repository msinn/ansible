---
- name: Install SmarthomeNG
  hosts: all
  remote_user: root
  become_user: root
  become: true

  vars:
    branch: develop

#  vars:
#    apt_install:
#      ["dialog",
#      "rlwrap",
#      "libatlas-base-dev",
#      "libyaml-dev",
#      "graphviz",
#      "rrdtool",
#      "librrd-dev"
#      ]
#    python_install:
#      ["pymysql",
#      "yolk3k",
#      "cython",
#      "recommonmark",
#      "sphinx-rtd-theme",
#      "sphinx==2.4"
#      ]

  tasks:
  - name: "Include: Create users and groups"
    include: 10_users_groups.yml

  # - name: Create Group
  #   group:
  #     name: smarthome
  #     state: present

  # - name: Create User
  #   user:
  #     name: smarthome
  #     shell: /bin/bash
  #     groups: smarthome
  #     append: no
  #     update_password: always
  #     password: ""
  #     comment: 'SmarthomeNG User'


 # - name: Groups
 #   user:
 #     name: smarthome
 #     shell: /bin/bash
 #     groups: www-data, sudo, i2c, adm, audio, video, plugdev, input, netdev, spi, gpio, dialout
 #     append: yes

  #- name: zwaveWheel
  #  copy:
  #    src: packages/python_openzwave-0.4.19-cp37-cp37m-linux_armv7l.whl
  #    dest: /opt/python_openzwave-0.4.19-cp37-cp37m-linux_armv7l.whl
  #    mode: 0777

  #- name: zwave
  #  pip:
  #    name: /opt/python_openzwave-0.4.19-cp37-cp37m-linux_armv7l.whl
  #    executable: pip3
  #    extra_args: --user
  #  become: true
  #  become_user: smarthome

#  - name: BluepyWheel
#    copy:
#      src: packages/bluepy-1.3.0-cp37-cp37m-linux_armv7l.whl
#      dest: /opt/bluepy-1.3.0-cp37-cp37m-linux_armv7l.whl
#      mode: 0777

#  - name: Bluepy
#    pip:
#      name: /opt/bluepy-1.3.0-cp37-cp37m-linux_armv7l.whl
#      executable: pip3
#      extra_args: --user
#    become: true
#    become_user: smarthome

#  - name: NumpyWheel
#    copy:
#      src: packages/numpy-1.18.2-cp37-cp37m-linux_armv7l.whl
#      dest: /opt/numpy-1.18.2-cp37-cp37m-linux_armv7l.whl
#      mode: 0777

#  - name: Numpy
#    pip:
#      name: /opt/numpy-1.18.2-cp37-cp37m-linux_armv7l.whl
#      executable: pip3
#      extra_args: --user
#    become: true
#    become_user: smarthome

#  - name: SciPyWheel
#    copy:
#      src: packages/scipy-1.4.1-cp37-cp37m-linux_armv7l.whl
#      dest: /opt/scipy-1.4.1-cp37-cp37m-linux_armv7l.whl
#      mode: 0777

#  - name: SciPy
#    pip:
#      name: /opt/scipy-1.4.1-cp37-cp37m-linux_armv7l.whl
#      executable: pip3
#      extra_args: --user
#    become: true
#    become_user: smarthome

#  - name: install apt
#    apt:
#      name: "{{ item }}"
#      state: latest
#      autoremove: yes
#      autoclean: yes
#    with_items: "{{ apt_install }}"

#  - name: install modules
#    pip:
#      name: "{{ item }}"
#      state: latest
#      executable: pip3
#      extra_args: --user
#    become: true
#    become_user: smarthome
#    with_items: "{{ python_install }}"

  - name: "Git SmarthomeNG ({{branch}})"
    git:
      repo: 'git://github.com/smarthomeNG/smarthome.git'
      dest: /usr/local/smarthome
      version: "{{ branch }}"
      force: yes
    register: git
  - debug: var=git

  - name: "Git Plugins ({{branch}})"
    git:
      repo: 'git://github.com/smarthomeNG/plugins.git'
      dest: /usr/local/smarthome/plugins
      version: "{{ branch }}"
      force: yes
    register: git2
    ignore_errors: yes
  - debug: var=git2

  - name: Create empty file 'all.txt' in smarthome/requirements
    file:
      path: "/usr/local/smarthome/requirements/all.txt"
      state: touch

  - name: Create empty file 'base.txt' in smarthome/requirements
    file:
      path: "/usr/local/smarthome/requirements/base.txt"
      state: touch

  - name: Create empty file 'conf_all.txt' in smarthome/requirements
    file:
      path: "/usr/local/smarthome/requirements/conf_all.txt"
      state: touch

  - name: Create empty file 'test.txt' in smarthome/requirements
    file:
      path: "/usr/local/smarthome/requirements/test.txt"
      state: touch

  - name: Change Owner of SmartHomeNG installation
    file:
      path: /usr/local/smarthome
      owner: smarthome
      group: smarthome
      mode: u=rwX,g=rwX,o=rX
      recurse: yes
      state: directory

#  - name: plugins ignore perm
#    command: git config core.fileMode false chdir=/usr/local/smarthome/plugins

#  - name: sh ignore perm
#    command: git config core.fileMode false chdir=/usr/local/smarthome/

#  - name: Remove astral
#    pip: name=astral executable=pip3 state=absent

#  - name: List Modules
#    command: "su smarthome -c 'yolk --list'"
#    register: pip3
#    ignore_errors: yes
#    become: true
#    become_user: smarthome
#  - debug: var=pip3
