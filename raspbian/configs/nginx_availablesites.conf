##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#

upstream websocket {
    server localhost:2424;
}

upstream mainhost {
    server localhost;
    keepalive 20;
}

upstream sv {
    server localhost;
    keepalive 20;
}

upstream alexa {
    server localhost:9000;
}

upstream shng {
    server localhost:8383;
}

upstream shnet {
    server localhost:9999;
}

upstream monithost {
    server localhost:2812;
}

server {

    listen 80 default_server;
    listen [::]:80 default_server;
    include /etc/nginx/snippets/letsencrypt.conf;
    root /var/www/html;

    # Add index.php to the list if you are using PHP
    index index.html index.htm index.nginx-debian.html index.php;

    server_name _;

    # Skip^1 caching variable init
    set $nocache 0;
    # Bypass^2 caching variable init
    set $purgecache 0;

    # Bypass^2 cache on no-cache (et al.) browser request
    if ($http_cache_control ~ "max-age=0")
        { set $purgecache 1; }
    if ($http_cache_control ~ "no-cache")
        { set $purgecache 1; }
    # Bypass^2 cache with custom header set on request
    if ($http_x_cache_purge ~* "true")
        { set $purgecache 1; }

    location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to displaying a 404.
            try_files $uri $uri/ =404;
            if ($http_upgrade = websocket) {
                    proxy_pass http://websocket;
            }
    }

    # insert phpmyadmin if available

    # pass PHP scripts to FastCGI server

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;

    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        include /etc/nginx/headers.conf;
        expires 7d;
        add_header Cache-Control "public, no-transform";
    }

    # Backend Plugin Weiterleitung
    location /shng/ {
        include /etc/nginx/headers.conf;
        satisfy any;
        #auth_basic "Restricted Area: Smarthome NG Backend";
        #auth_basic_user_file /etc/nginx/.shng;
        allow 127.0.0.1;
        allow 192.168.0.0/16;
        allow 10.0.0.0/16;
        deny all;

        if ($allowed_country = no) {
            return 403;
        }
        proxy_pass http://shng;
        rewrite ^/shng/(.*) http://$host:8383$1; break;
        proxy_redirect  http://shng /shng;
        proxy_cookie_path / /shng/;
    }

    location /backend/ {
        include /etc/nginx/headers.conf;
        satisfy any;
        #auth_basic "Restricted Area: Smarthome NG Backend";
        #auth_basic_user_file /etc/nginx/.shng;
        allow 127.0.0.1;
        allow 192.168.0.0/16;
        allow 10.0.0.0/16;
        deny all;

        if ($allowed_country = no) {
            return 403;
        }
        proxy_pass http://shng;
        rewrite ^/backend/(.*) http://$host:8383$1; break;
        proxy_redirect  http://backend /backend;
        proxy_cookie_path / /backend/;
    }

    # Network Plugin Weiterleitung
    location /shnet {
        include /etc/nginx/headers.conf;
        satisfy any;
        #auth_basic "Restricted Area: Smarthome NG Network";
        #auth_basic_user_file /etc/nginx/.shng;
        allow 127.0.0.1;
        allow 192.168.0.0/16;
        allow 10.0.0.0/16;
        deny all;

        if ($allowed_country = no) {
            return 403;
        }
        proxy_pass http://shnet;
        rewrite ^/shnet/(.*) http://$host:9999$1; break;
        proxy_redirect  http://shnet /shnet;
        proxy_cookie_path / /shnet/;
    }

  # Weiterleitung zu Monit
    location /monit/ {
        satisfy any;
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 192.168.0.0/16;
#        auth_basic "Restricted Area: Monit";
#        auth_basic_user_file /etc/nginx/.monit;
        deny all;

        if ($allowed_country = no) {
            return 403;
        }
        rewrite ^/monit/(.*) /$1 break;
        proxy_pass   http://monit;
        proxy_redirect  http://monit /monit;
        proxy_cookie_path / /monit/;
        include /etc/nginx/headers.conf;
    }


        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}



}
# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#       listen 80;
#       listen [::]:80;
#
#       server_name example.com;
#
#       root /var/www/example.com;
#       index index.html;
#
#       location / {
#               try_files $uri $uri/ =404;
#       }
#}
